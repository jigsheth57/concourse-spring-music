---
resources:
- name: music-repo
  type: git
  source:
    uri: git@github.com:jigsheth57/concourse-spring-music.git
    branch: master
    private_key: {{git_private_key}}

- name: version
  type: semver
  source:
    bucket: ci-spring-music-artifacts
    key: current-version
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}
    initial_version: 1.0.0

- name: music-release
  type: s3
  source:
    bucket: ci-spring-music-artifacts
    regexp: spring-music-(.*).war
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

- name: resource-deploy-music-app
  type: cf
  source:
    api: {{cf-api}}
    username: {{cf-username}}
    password: {{cf-password}}
    organization: {{cf-organization}}
    space: {{cf-space}}
    skip_cert_check: true

jobs:
- name: unit-test
  public: true
  plan:
  - get: music-repo
    trigger: true
  - task: unit-test
    file: music-repo/ci/tasks/unit.yml

- name: build-binary
  public: true
  serial: true
  plan:
  - get: music-repo
    passed: [unit-test]
    trigger: true
  - get: version
    params: {bump: patch}
  - task: build-artifact
    file: music-repo/ci/tasks/build-artifact.yml
    timeout: 5m
  - put: music-release
    params: {file: build-artifact/spring-music-*.war}
  - put: music-repo
    params:
      repository: music-repo
      tag: version/number
  - put: version
    params: {file: version/number}

- name: acceptance-tests
  plan:
  - aggregate:
    - get: music-release
      passed: [build-binary]
      trigger: true
    - get: music-repo
      passed: [build-binary]
      trigger: true
  - put: resource-deploy-music-app
    params:
      space: development
      manifest: music-repo/ci/manifest.yml
      path: music-release/spring-music-*.war
